define i64 @fib(i64 %x) {
entry:
  %slttmp = icmp slt i64 %x, 3
  %cast_i1_to_i64 = sext i1 %slttmp to i64
  %ifcond = icmp eq i64 %cast_i1_to_i64, 0
  br i1 %ifcond, label %then, label %else

then:                                             ; preds = %entry
  br label %ifcont

else:                                             ; preds = %entry
  %subtmp = sub i64 %x, 1
  %calltmp = call i64 @fib(i64 %subtmp)
  %subtmp1 = sub i64 %x, 2
  %calltmp2 = call i64 @fib(i64 %subtmp1)
  %addtmp = add i64 %calltmp, %calltmp2
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %iftmp = phi i64 [ 1, %then ], [ %addtmp, %else ]
  ret i64 %iftmp
}
Wrote output.o
